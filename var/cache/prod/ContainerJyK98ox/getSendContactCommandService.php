<?php

namespace ContainerJyK98ox;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSendContactCommandService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Command\SendContactCommand' shared autowired service.
     *
     * @return \App\Command\SendContactCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['App\\Command\\SendContactCommand'] = $instance = new \App\Command\SendContactCommand(($container->privates['App\\Repository\\ContactRepository'] ?? $container->load('getContactRepositoryService')), new \Symfony\Component\Mailer\Mailer((new \Symfony\Component\Mailer\Transport(new RewindableGenerator(function () use ($container) {
            yield 0 => $container->load('getMailer_TransportFactory_NullService');
            yield 1 => $container->load('getMailer_TransportFactory_SendmailService');
            yield 2 => $container->load('getMailer_TransportFactory_NativeService');
            yield 3 => $container->load('getMailer_TransportFactory_SmtpService');
        }, 4)))->fromStrings(['main' => $container->getEnv('MAILER_DSN')]), NULL, ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService())), ($container->privates['App\\Service\\ContactService'] ?? $container->load('getContactServiceService')), ($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService')));

        $instance->setName('app:send-contact');

        return $instance;
    }
}
